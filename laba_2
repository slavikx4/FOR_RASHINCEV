//подключаем библиотеки
#include <iostream>
#include <clocale>


using namespace std;

int main() {
	//ставим кирилицу
	setlocale(0, "");
	//выводим меню программы
	cout << "Программа сохраняет дату и её описание\n" <<
		"Чтобы добавить дату, жми(1)\n" <<
		"Чтобы найти дату, жми(2)\n" <<
		"Чтобы закрыть программу, жми(0)" << endl;

	//вводи массивы для храниения данных
	char dataLibrary[100][9];
	char descriptionLibrary[100][255];
	//переменная для перемещения по массиву
	int index = 0;

	//спрашиваем первую команду
	cout << "Введите команду: ";
	int i;
	cin >> i;

	//заволим цикл, чтобы программа использовалась, пока пользователь не захотел выйти
	while (i != 0) {
		switch (i) {
		case(1):
			//устанавливаем дату
			char data[9];
			cout << "Установите дату(через точку, например: 12.12.12): ";
			cin >> data;
			//добавляем массив в массив
			memcpy(dataLibrary[index], data, sizeof(data));

			//устанавливаем описание
			char description[250];
			cout << "Установите описание(до 255 символов): ";
			//убираем лишний символ
			cin.ignore();
			//считываем строку до знака \n
			cin.getline(description, 250);
			memcpy(descriptionLibrary[index], description, sizeof(description));

			// делаем шаг 
			index++;

			break;

		case(2):
			{cout << "Введите дату для поиска(через точку, например: 12.12.12): ";
			char searchData[9];
			cin >> searchData;

			//переменная для определения результата
			bool flag = false;
			//цикл, чтобы проверить была ли зарегитрирована дата
			for (int i = 0; i < index; i++) {
				//проверка на раенство строк
				if (!strcmp(dataLibrary[i], searchData)) {

					cout << "Дата найдена" << endl;
					//выводим описание даты

					cout << descriptionLibrary[i] << endl;
					//дата найдена 
					flag = true;
					break;
				}
			}
			//если дата была не найдена, то выдаём ошибку
			if (!flag) {
				cout << "Ошибка: дата не зарегистрирована" << endl;
			}
			}
			break;
		//во всех неправильных вводах команды кидаем ошибку
		default:
			cout << "Ошибка: такой команды нет" << endl;
			break;
		}
		//очередной запрос команды
		cout << "Введите команду: ";
		cin >> i;
	}

	cout << "Программа закрылась" << endl;
	// возращаем 0 -> программа завершилась без нарушений
	return 0;
}
